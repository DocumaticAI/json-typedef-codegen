// Code generated by jetted for C# + System.Text.Json v0.1.0

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace JettedE2E
{
    [JsonConverter(typeof(RootEmptyJsonConverter))]
    public class RootEmpty
    {
        /// <summary>
        /// The underlying data being wrapped.
        /// </summary>
        public object Value { get; set; }
    }

    public class RootEmptyJsonConverter : JsonConverter<RootEmpty>
    {
        public override RootEmpty Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            return new RootEmpty { Value = JsonSerializer.Deserialize<object>(ref reader, options) };
        }

        public override void Write(Utf8JsonWriter writer, RootEmpty value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize<object>(writer, value.Value, options);
        }
    }
}
