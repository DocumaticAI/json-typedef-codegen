// Code generated by jetted for C# + System.Text.Json v0.1.0

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace JettedE2E
{
    [JsonConverter(typeof(RootFloat32JsonConverter))]
    public class RootFloat32
    {
        /// <summary>
        /// The underlying data being wrapped.
        /// </summary>
        public float Value { get; set; }
    }

    public class RootFloat32JsonConverter : JsonConverter<RootFloat32>
    {
        public override RootFloat32 Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            return new RootFloat32 { Value = JsonSerializer.Deserialize<float>(ref reader, options) };
        }

        public override void Write(Utf8JsonWriter writer, RootFloat32 value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize<float>(writer, value.Value, options);
        }
    }
}
